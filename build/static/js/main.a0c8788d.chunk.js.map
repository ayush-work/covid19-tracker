{"version":3,"sources":["Card.js","Country.js","Search.js","App.js","index.js"],"names":["Card","props","cases","newCases","active","deaths","recovered","type","message","todayCases","todayDeaths","todayRecovered","Intl","NumberFormat","format","className","Country","country","updated","val","time","Date","toUTCString","console","log","id","Search","useState","inputVal","setInputVal","results","setResults","getCountryData","query","a","fetch","response","json","data","ok","useEffect","value","onChange","e","target","placeholder","selector","onClick","App","setActive","death","setDeath","setRecovered","setData","allData","getData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0c8788d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n  const {\r\n    active,\r\n    deaths,\r\n    recovered,\r\n    message,\r\n    type,\r\n    todayCases,\r\n    todayDeaths,\r\n    todayRecovered,\r\n  } = props;\r\n  let cases;\r\n  let newCases;\r\n  if (type === \"active\") {\r\n    cases = new Intl.NumberFormat(\"en-IN\").format(active);\r\n    newCases = new Intl.NumberFormat(\"en-IN\").format(todayCases);\r\n    // formatCases(active, todayCases);\r\n  }\r\n  if (type === \"recovered\") {\r\n    cases = new Intl.NumberFormat(\"en-IN\").format(recovered);\r\n    newCases = new Intl.NumberFormat(\"en-IN\").format(todayRecovered);\r\n  }\r\n  if (type === \"death\") {\r\n    cases = new Intl.NumberFormat(\"en-IN\").format(deaths);\r\n    newCases = new Intl.NumberFormat(\"en-IN\").format(todayDeaths);\r\n  }\r\n\r\n  return (\r\n    <div className={`card ${type}`}>\r\n      <h2 className=\"card-type\">{type}</h2>\r\n      <h3>{cases}</h3>\r\n      <div className=\"today-cases\">\r\n        <h4>Daily increase :</h4>\r\n        <h4>\r\n          {newCases}{\" \"}\r\n          <span>\r\n            <i className=\"bx bx-up-arrow-alt\"></i>\r\n          </span>\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Country = (props) => {\r\n  const { country, cases, active, updated, val, recovered, deaths } = props;\r\n  const time = new Date(updated).toUTCString();\r\n  new Intl.NumberFormat(\"en-IN\").format(deaths);\r\n  console.log(props);\r\n  return (\r\n    <>\r\n      {!val || (\r\n        <div className=\"country\" id=\"scrollInto\">\r\n          <div className=\"country-header\">\r\n            <div className=\"country-title\">\r\n              <h3>{country}</h3>\r\n              <h4 className=\"country-date\">Last updated on {time}</h4>\r\n            </div>\r\n            <div className=\"total-cases\">\r\n              <h5>Total</h5>{\" \"}\r\n              <h4>{new Intl.NumberFormat(\"en-IN\").format(cases)} </h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"cases\">\r\n            <h4 className=\"active\">\r\n              Active cases : {new Intl.NumberFormat(\"en-IN\").format(active)}\r\n            </h4>\r\n\r\n            <h4 className=\"recovered\">\r\n              Recovered cases :{\" \"}\r\n              {new Intl.NumberFormat(\"en-IN\").format(recovered)}\r\n            </h4>\r\n\r\n            <h4 className=\"death\">\r\n              Total Deaths : {new Intl.NumberFormat(\"en-IN\").format(deaths)}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Country from \"./Country\";\r\nimport ScrollIntoView from \"react-scroll-into-view\";\r\nconst Search = () => {\r\n  const [inputVal, setInputVal] = useState(\"\");\r\n\r\n  const [results, setResults] = useState();\r\n\r\n  const getCountryData = async function (query) {\r\n    try {\r\n      const response = await fetch(\r\n        `https://disease.sh/v3/covid-19/countries/${query}?strict=false`\r\n      );\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setResults(data);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCountryData(inputVal);\r\n  }, [inputVal]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search\">\r\n        <i className=\"bx bx-search\"></i>\r\n        <input\r\n          type=\"text\"\r\n          value={inputVal}\r\n          onChange={(e) => setInputVal(e.target.value)}\r\n          placeholder=\"Search Country\"\r\n        />\r\n        <ScrollIntoView selector=\"#scrollInto\">\r\n          <button className=\"btn hidden\" onClick={getCountryData}>\r\n            Submit\r\n          </button>\r\n        </ScrollIntoView>\r\n      </div>\r\n\r\n      <Country {...results} val={inputVal}></Country>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useEffect, useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport Search from \"./Search\";\r\n\r\nfunction App() {\r\n  const [active, setActive] = useState(\"\");\r\n  const [death, setDeath] = useState(\"\");\r\n  const [recovered, setRecovered] = useState(\"\");\r\n  const [data, setData] = useState({});\r\n\r\n  const allData = async function () {\r\n    const response = await fetch(\"https://corona.lmao.ninja/v2/all?yesterday\");\r\n    const data = await response.json();\r\n    const {\r\n      active,\r\n      recovered,\r\n      deaths,\r\n      updated,\r\n      todayRecovered,\r\n      todayDeaths,\r\n      todayCases,\r\n    } = data;\r\n    setActive(active);\r\n    setDeath(deaths);\r\n    setRecovered(recovered);\r\n\r\n    setData({\r\n      updated,\r\n      active,\r\n      deaths,\r\n      recovered,\r\n      todayCases,\r\n      todayDeaths,\r\n      todayRecovered,\r\n    });\r\n  };\r\n  const getData = async function () {\r\n    const response = await fetch(\r\n      \"https://corona.lmao.ninja/v2/countries?yesterday&sort\"\r\n    );\r\n    const data = await response.json();\r\n  };\r\n  useEffect(() => {\r\n    allData();\r\n    getData();\r\n  }, [active, death, recovered]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"heading\">\r\n        <h2>traCovid</h2>\r\n      </div>\r\n      <div className=\"app\">\r\n        <section className=\"card-container\">\r\n          <Card type=\"active\" {...data} />\r\n          <Card type=\"recovered\" {...data} />\r\n          <Card type=\"death\" {...data} />\r\n        </section>\r\n        <Search></Search>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./main.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}