{"version":3,"sources":["Card.js","Country.js","Search.js","App.js","index.js"],"names":["Card","props","cases","newCases","active","deaths","recovered","type","message","todayCases","todayDeaths","todayRecovered","Intl","NumberFormat","format","className","Country","country","updated","val","time","Date","toUTCString","Search","useState","inputVal","setInputVal","results","setResults","getCountryData","query","a","fetch","response","json","data","ok","console","log","useEffect","value","onChange","e","target","placeholder","App","setActive","death","setDeath","setRecovered","setData","allData","getData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fe2937b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n  const {\r\n    active,\r\n    deaths,\r\n    recovered,\r\n    message,\r\n    type,\r\n    todayCases,\r\n    todayDeaths,\r\n    todayRecovered,\r\n  } = props;\r\n  let cases;\r\n  let newCases;\r\n  if (type === \"active\") {\r\n    cases = new Intl.NumberFormat(\"en-IN\").format(active);\r\n    newCases = new Intl.NumberFormat(\"en-IN\").format(todayCases);\r\n    // formatCases(active, todayCases);\r\n  }\r\n  if (type === \"recovered\") {\r\n    cases = new Intl.NumberFormat(\"en-IN\").format(recovered);\r\n    newCases = new Intl.NumberFormat(\"en-IN\").format(todayRecovered);\r\n  }\r\n  if (type === \"death\") {\r\n    cases = new Intl.NumberFormat(\"en-IN\").format(deaths);\r\n    newCases = new Intl.NumberFormat(\"en-IN\").format(todayDeaths);\r\n  }\r\n\r\n  return (\r\n    <div className={`card ${type}`}>\r\n      <h2 className=\"card-type\">{type}</h2>\r\n      <h3>{cases}</h3>\r\n      <div className=\"today-cases\">\r\n        <h4>Daily increase :</h4>\r\n        <h4>\r\n          {newCases}{\" \"}\r\n          <span>\r\n            <i className=\"bx bx-up-arrow-alt\"></i>\r\n          </span>\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Country = (props) => {\r\n  const { country, cases, active, updated, val, recovered, deaths } = props;\r\n  const time = new Date(updated).toUTCString();\r\n  new Intl.NumberFormat(\"en-IN\").format(deaths);\r\n  return (\r\n    <>\r\n      {!val || (\r\n        <div className=\"country\">\r\n          <div className=\"country-header\">\r\n            <div className=\"country-title\">\r\n              <h3>{country}</h3>\r\n              <h4 className=\"country-date\">Last updated on {time}</h4>\r\n            </div>\r\n            <div className=\"total-cases\">\r\n              <h5>Total</h5>{\" \"}\r\n              <h4>{new Intl.NumberFormat(\"en-IN\").format(cases)} </h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"cases\">\r\n            <h4 className=\"active\">\r\n              Active cases : {new Intl.NumberFormat(\"en-IN\").format(active)}\r\n            </h4>\r\n            <h4 className=\"recovered\">\r\n              Recovered cases :{\" \"}\r\n              {new Intl.NumberFormat(\"en-IN\").format(recovered)}\r\n            </h4>\r\n            <h4 className=\"death\">\r\n              Total Deaths : {new Intl.NumberFormat(\"en-IN\").format(deaths)}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Country from \"./Country\";\r\nimport Typed from \"react-typed\";\r\n\r\nconst Search = () => {\r\n  const [inputVal, setInputVal] = useState(\"\");\r\n\r\n  const [results, setResults] = useState();\r\n\r\n  const getCountryData = async function (query) {\r\n    try {\r\n      const response = await fetch(\r\n        `https://disease.sh/v3/covid-19/countries/${query}?strict=false`\r\n      );\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setResults(data);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCountryData(inputVal);\r\n  }, [inputVal]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search\">\r\n        <i className=\"bx bx-search\"></i>\r\n        <input\r\n          type=\"text\"\r\n          value={inputVal}\r\n          onChange={(e) => setInputVal(e.target.value)}\r\n          placeholder=\"Search Country\"\r\n        />\r\n        {/* <button className=\"btn\" onClick={getCountryData}>\r\n          Submit\r\n        </button> */}\r\n      </div>\r\n      <Country {...results} val={inputVal}></Country>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport Search from \"./Search\";\nfunction App() {\n  const [active, setActive] = useState(\"\");\n  const [death, setDeath] = useState(\"\");\n  const [recovered, setRecovered] = useState(\"\");\n  const [data, setData] = useState({});\n\n  const allData = async function () {\n    const response = await fetch(\"https://corona.lmao.ninja/v2/all?yesterday\");\n    const data = await response.json();\n    const {\n      active,\n      recovered,\n      deaths,\n      updated,\n      todayRecovered,\n      todayDeaths,\n      todayCases,\n    } = data;\n    setActive(active);\n    setDeath(deaths);\n    setRecovered(recovered);\n\n    setData({\n      updated,\n      active,\n      deaths,\n      recovered,\n      todayCases,\n      todayDeaths,\n      todayRecovered,\n    });\n  };\n  const getData = async function () {\n    const response = await fetch(\n      \"https://corona.lmao.ninja/v2/countries?yesterday&sort\"\n    );\n    const data = await response.json();\n  };\n  useEffect(() => {\n    allData();\n    getData();\n  }, [active, death, recovered]);\n\n  return (\n    <>\n      <div className=\"heading\">\n        <h2>traCovid</h2>\n      </div>\n      <div className=\"app\">\n        <section className=\"card-container\">\n          <Card type=\"active\" {...data} />\n          <Card type=\"recovered\" {...data} />\n          <Card type=\"death\" {...data} />\n        </section>\n        <Search></Search>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./main.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}