{"version":3,"sources":["numFormat.js","components/card/Card.js","components/country/Country.js","components/search/Search.js","App.js","index.js"],"names":["numFormat","number","Intl","NumberFormat","format","Card","props","cases","newCases","active","deaths","recovered","type","todayCases","todayDeaths","todayRecovered","className","Country","country","updated","val","time","Date","toUTCString","id","Search","useState","inputVal","setInputVal","results","setResults","getCountryData","query","a","fetch","response","json","data","ok","useEffect","value","onChange","e","target","placeholder","selector","onClick","App","setActive","death","setDeath","setRecovered","setData","allData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad352449.chunk.js","sourcesContent":["// function for formatting number into en-IN formatted string\r\n\r\nexport const numFormat = (number) => {\r\n  const formatted = new Intl.NumberFormat(\"en-IN\").format(number);\r\n  return formatted;\r\n};\r\nexport default numFormat;\r\n","import React from \"react\";\r\nimport numFormat from \"../../numFormat.js\";\r\n\r\nconst Card = (props) => {\r\n  const {\r\n    active,\r\n    deaths,\r\n    recovered,\r\n    type,\r\n    todayCases,\r\n    todayDeaths,\r\n    todayRecovered,\r\n  } = props;\r\n  let cases;\r\n  let newCases;\r\n  if (type === \"active\") {\r\n    cases = numFormat(active);\r\n    newCases = numFormat(todayCases);\r\n  }\r\n  if (type === \"recovered\") {\r\n    cases = numFormat(recovered);\r\n    newCases = numFormat(todayRecovered);\r\n  }\r\n  if (type === \"death\") {\r\n    cases = numFormat(deaths);\r\n    newCases = numFormat(todayDeaths);\r\n  }\r\n\r\n  return (\r\n    <div className={`card ${type}`}>\r\n      <h2 className=\"card-type\">{type}</h2>\r\n      <h3>{cases}</h3>\r\n      <div className=\"today-cases\">\r\n        <h4>Daily increase :</h4>\r\n        <h4>\r\n          {newCases}{\" \"}\r\n          {/* <span>\r\n            <i className=\"bx bx-up-arrow-alt\"></i>\r\n          </span> */}\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport numFormat from \"../../numFormat.js\";\r\nconst Country = (props) => {\r\n  const { country, cases, active, updated, val, recovered, deaths } = props;\r\n  const time = new Date(updated).toUTCString();\r\n\r\n  return (\r\n    <>\r\n      {!val || (\r\n        <div className=\"country\" id=\"scrollInto\">\r\n          <div className=\"country-header\">\r\n            <div className=\"country-title\">\r\n              <h3>{country}</h3>\r\n              <h4 className=\"country-date\">Last updated on {time}</h4>\r\n            </div>\r\n            <div className=\"total-cases\">\r\n              <h5>Total</h5> <h4>{numFormat(cases)} </h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"cases\">\r\n            <h4 className=\"active\">Active cases : {numFormat(active)}</h4>\r\n\r\n            <h4 className=\"recovered\">\r\n              Recovered cases : {numFormat(recovered)}\r\n            </h4>\r\n            <h4 className=\"death\">Total Deaths : {numFormat(deaths)}</h4>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Country from \"../country/Country\";\r\nimport ScrollIntoView from \"react-scroll-into-view\";\r\nconst Search = () => {\r\n  const [inputVal, setInputVal] = useState(\"\");\r\n\r\n  const [results, setResults] = useState();\r\n\r\n  const getCountryData = async function (query) {\r\n    try {\r\n      const response = await fetch(\r\n        `https://disease.sh/v3/covid-19/countries/${query}?strict=false`\r\n      );\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setResults(data);\r\n      }\r\n    } catch (e) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCountryData(inputVal);\r\n  }, [inputVal]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search\">\r\n        <i className=\"bx bx-search\"></i>\r\n        <input\r\n          type=\"text\"\r\n          value={inputVal}\r\n          onChange={(e) => setInputVal(e.target.value)}\r\n          placeholder=\"Search Country\"\r\n        />\r\n        <ScrollIntoView selector=\"#scrollInto\">\r\n          <button className=\"btn hidden\" onClick={getCountryData}>\r\n            Submit\r\n          </button>\r\n        </ScrollIntoView>\r\n      </div>\r\n\r\n      <Country {...results} val={inputVal}></Country>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useEffect, useState } from \"react\";\r\nimport Card from \"./components/card/Card\";\r\nimport Search from \"./components/search/Search\";\r\n\r\nfunction App() {\r\n  const [active, setActive] = useState(\"\");\r\n  const [death, setDeath] = useState(\"\");\r\n  const [recovered, setRecovered] = useState(\"\");\r\n  const [data, setData] = useState({});\r\n\r\n  const allData = async function () {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://corona.lmao.ninja/v2/all?yesterday\"\r\n      );\r\n      const data = await response.json();\r\n      const {\r\n        active,\r\n        recovered,\r\n        deaths,\r\n        updated,\r\n        todayRecovered,\r\n        todayDeaths,\r\n        todayCases,\r\n      } = data;\r\n      setActive(active);\r\n      setDeath(deaths);\r\n      setRecovered(recovered);\r\n\r\n      setData({\r\n        updated,\r\n        active,\r\n        deaths,\r\n        recovered,\r\n        todayCases,\r\n        todayDeaths,\r\n        todayRecovered,\r\n      });\r\n    } catch (e) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    allData();\r\n  }, [active, death, recovered]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"heading\">\r\n        <h2>traCovid</h2>\r\n      </div>\r\n      <div className=\"app\">\r\n        <section className=\"card-container\">\r\n          <Card type=\"active\" {...data} />\r\n          <Card type=\"recovered\" {...data} />\r\n          <Card type=\"death\" {...data} />\r\n        </section>\r\n        <Search></Search>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./main.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}